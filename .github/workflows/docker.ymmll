name: Launch Node.js and MariaDB

on: [push]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        # Set health checks to wait for DB to be ready
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      # Setup Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Clear and update src/password.env file with new content from GitHub Secrets
      - name: Update src/password.env file
        run: |
          # Clear the content of the file
          > src/password.env
          
          # Write new environment variables to the file
          echo MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }} >> src/password.env
          echo MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} >> src/password.env
          echo MYSQL_USER=${{ secrets.MYSQL_USER }} >> src/password.env
          echo MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} >> src/password.env
          # Add other environment variables as needed

      # Install Node.js dependencies
      - name: Install dependencies
        run: npm install

      # You might want to run tests or other checks here
      - name: Run tests
        run: npm test

      # Build and run your Node.js app using Docker
      - name: Build and run Node.js app
        run: |
          docker build -t nodejs_container -f Dockerfile-nodejs .
          docker run -d --name nodejs_container -p 3000:3000 nodejs_container

      # Add any other steps you need for deployment or testing
